{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport * as io from \"socket.io-client\";\nimport { SOCKET_BASE_URL } from \"../constants/apiConstants\";\nexport const useSocket = room => {\n  _s();\n\n  const [socket, setSocket] = useState();\n  const [isConnected, setConnected] = useState(false);\n  const sendData = useCallback(payload => {\n    socket.emit(\"send_message\", {\n      type: \"CLIENT\",\n      message: \"hello\",\n      room: \"a\",\n      from: \"thai\",\n      to: \"server\"\n    });\n  }, [socket, room]);\n  useEffect(() => {\n    const s = io(SOCKET_BASE_URL, {\n      reconnection: false,\n      query: `&room=${room}`\n    });\n    setSocket(s);\n    s.on(\"connect\", () => setConnected(true));\n    console.log(isConnected);\n    s.on(\"read_message\", res => {\n      console.log(res);\n    });\n    console.log(s);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n  return {\n    socketResponse,\n    isConnected,\n    sendData\n  };\n};\n\n_s(useSocket, \"cGi0UJwmUJ5WMT1jQPGqF5bnCpw=\");","map":{"version":3,"names":["useCallback","useEffect","useState","io","SOCKET_BASE_URL","useSocket","room","socket","setSocket","isConnected","setConnected","sendData","payload","emit","type","message","from","to","s","reconnection","query","on","console","log","res","disconnect","socketResponse"],"sources":["/Users/truonghuythai/Documents/chat/socketio-simple-chat/frontend/src/customHooks/useSocket.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport * as io from \"socket.io-client\";\nimport { SOCKET_BASE_URL } from \"../constants/apiConstants\";\n\nexport const useSocket = (room) => {\n  const [socket, setSocket] = useState();\n\n  const [isConnected, setConnected] = useState(false);\n  const sendData = useCallback(\n    (payload) => {\n      socket.emit(\"send_message\", {\n        type : \"CLIENT\",\n        message : \"hello\",\n        room : \"a\",\n        from : \"thai\",\n        to : \"server\"\n      });\n    },\n    [socket, room]\n  );\n  useEffect(() => {\n    const s = io(SOCKET_BASE_URL, {\n      reconnection: false,\n      query: `&room=${room}`,\n    });\n    setSocket(s);\n    s.on(\"connect\", () => setConnected(true));\n    console.log(isConnected);\n    s.on(\"read_message\", (res) => {\n      console.log(res);\n    });\n    console.log(s)\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n\n  return { socketResponse, isConnected, sendData };\n};\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB;AACA,SAASC,eAAT,QAAgC,2BAAhC;AAEA,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAU;EAAA;;EACjC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,EAApC;EAEA,MAAM,CAACO,WAAD,EAAcC,YAAd,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAMS,QAAQ,GAAGX,WAAW,CACzBY,OAAD,IAAa;IACXL,MAAM,CAACM,IAAP,CAAY,cAAZ,EAA4B;MAC1BC,IAAI,EAAG,QADmB;MAE1BC,OAAO,EAAG,OAFgB;MAG1BT,IAAI,EAAG,GAHmB;MAI1BU,IAAI,EAAG,MAJmB;MAK1BC,EAAE,EAAG;IALqB,CAA5B;EAOD,CATyB,EAU1B,CAACV,MAAD,EAASD,IAAT,CAV0B,CAA5B;EAYAL,SAAS,CAAC,MAAM;IACd,MAAMiB,CAAC,GAAGf,EAAE,CAACC,eAAD,EAAkB;MAC5Be,YAAY,EAAE,KADc;MAE5BC,KAAK,EAAG,SAAQd,IAAK;IAFO,CAAlB,CAAZ;IAIAE,SAAS,CAACU,CAAD,CAAT;IACAA,CAAC,CAACG,EAAF,CAAK,SAAL,EAAgB,MAAMX,YAAY,CAAC,IAAD,CAAlC;IACAY,OAAO,CAACC,GAAR,CAAYd,WAAZ;IACAS,CAAC,CAACG,EAAF,CAAK,cAAL,EAAsBG,GAAD,IAAS;MAC5BF,OAAO,CAACC,GAAR,CAAYC,GAAZ;IACD,CAFD;IAGAF,OAAO,CAACC,GAAR,CAAYL,CAAZ;IACA,OAAO,MAAM;MACXA,CAAC,CAACO,UAAF;IACD,CAFD;EAGD,CAfQ,EAeN,EAfM,CAAT;EAiBA,OAAO;IAAEC,cAAF;IAAkBjB,WAAlB;IAA+BE;EAA/B,CAAP;AACD,CAlCM;;GAAMN,S"},"metadata":{},"sourceType":"module"}